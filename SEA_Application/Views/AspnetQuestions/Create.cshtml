@model SEA_Application.Models.QuestionAnswerViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}
<style>
    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .checkbox input[type=checkbox], .checkbox-inline input[type=checkbox], .radio input[type=radio], .radio-inline input[type=radio] {
        position: absolute;
        margin-top: 4px\9;
        margin-left: 0px;
    }

    .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 1500px !important;
    }
</style>

<style>
    .onoffswitch {
        position: relative;
        width: 90px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .onoffswitch-checkbox {
        display: none;
    }

    .onoffswitch-label {
        display: block;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid #999999;
        border-radius: 20px;
    }

    .onoffswitch-inner {
        display: block;
        width: 200%;
        margin-left: -100%;
        transition: margin 0.3s ease-in 0s;
    }

        .onoffswitch-inner:before, .onoffswitch-inner:after {
            display: block;
            float: left;
            width: 50%;
            height: 30px;
            padding: 0;
            line-height: 30px;
            font-size: 14px;
            color: white;
            font-family: Trebuchet, Arial, sans-serif;
            font-weight: bold;
            box-sizing: border-box;
        }

        .onoffswitch-inner:before {
            content: "True";
            padding-left: 10px;
            background-color: #00b8ec;
            color: #FFFFFF;
        }

        .onoffswitch-inner:after {
            content: "False";
            padding-right: 10px;
            background-color: #EEEEEE;
            color: #999999;
            text-align: right;
        }

    .onoffswitch-switch {
        display: block;
        width: 18px;
        margin: 6px;
        background: #FFFFFF;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 56px;
        border: 2px solid #999999;
        border-radius: 20px;
        transition: all 0.3s ease-in 0s;
    }

    .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {
        margin-left: 0;
    }

    .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {
        right: 0px;
    }
</style>

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
@*<script src="~/Content/Toggle.js"></script>*@
<script src="~/Content/Toggle.js"></script>

<script>
    $(document).ready(function () {


        $("#PageHeader").html("Add Question");

        $("#BreadCrumbs").append(' <li> <a href="/Account/Dashboard"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li> <a href="/AspnetQuestions/ViewQuestionAndQuiz">Question & Quiz </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Create</a></li>');




        $.ajax({
            type: "POST",
            cache: false,
            url: "/AspnetLessons/LoadSectionIdDDL",
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);

                var $el = $(".SecIdDDL");
                $el.empty();
                if (sch.length > 0) {
                    $el.append($("<option></option>")
                        .attr("value", "").text('Select Section'));
                    for (i = 0; i < sch.length; i++) {
                        $el.append($("<option></option>")
                            .attr("value", sch[i].Id).text(sch[i].ClassName));
                    }
                }
                else {
                    $el.append($("<option></option>")
                        .attr("value", '').text('Select'));
                }
            }
        });


        var course = 'CSS';
        var Class;
        $('#CTId').change(function () {

            var crse = $(this).val();

            console.log(crse);
            course = crse;
            if (crse != "") {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetSubjectsByClass?CT=" + course,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".SubIdDDL");
                        $el.empty();
                        var $e2 = $(".TopIdDDL");
                        $e2.empty();
                        var $e3 = $(".LessIdDDL");
                        $e3.empty();
                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Subject'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].SubjectName));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });

            }
            else {

                var $el = $(".SubIdDDL");
                $el.empty();
                var $e2 = $(".TopIdDDL");
                $e2.empty();
                var $e3 = $(".LessIdDDL");
                $e3.empty();
            }
        });


        $('#SecId').change(function () {

            var UserName = $(this).val();
            console.log(UserName);
            Class = UserName;
            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/GetSubjectsByClass?ClassID=" + UserName + "&&CT=" + course,
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);
                    var $el = $(".SubIdDDL");
                    $el.empty();
                    var $e2 = $(".TopIdDDL");
                    $e2.empty();
                    var $e3 = $(".LessIdDDL");
                    $e3.empty();
                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Subject'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].SubjectName));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select'));
                    }
                }
            });

        });

        $('#TopId').change(function () {

            var topid = $(this).val();
            console.log(topid);

            if (topid != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetLession?TopID=" + topid,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);

                        var $el = $(".LessIdDDL");
                        $el.empty();
                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Lesson'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });
            }
            else {

                var $el = $(".LessIdDDL");
                $el.empty();
            }

        });


        $('#SubId').change(function () {

            var subid = $(this).val();
            console.log(subid);

            if (subid != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetTopic?SubID=" + subid,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".TopIdDDL");
                        $el.empty();
                        var $e1 = $(".LessIdDDL");
                        $e1.empty();

                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Topic'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });
            }
            else {
                var $el = $(".TopIdDDL");
                $el.empty();
                var $e1 = $(".LessIdDDL");
                $e1.empty();
            }

        });

    })
</script>



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body p-5">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-md-6 pl-5 pr-5 ">
                            <div class="form-group bmd-form-group is-filled">

                                @Html.LabelFor(model => model.QuestionName, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.QuestionName, new { htmlAttributes = new { id = "textareastyle", @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })

                            </div>


                            <div class="form-group">
                                <label for="" class="control-label">Course Type* </label>

                                <select class="form-control CTIdDDL" id="CTId" name="CTId" required>

                                    <option value="">Select One</option>

                                    <option value="CSS">CSS</option>
                                    <option value="PMS">PMS</option>

                                </select>
                            </div>

                            <div class="form-group">
                                <label class="form-check-label" for="QuestionIsActive">Is Active</label>
                                <div class="onoffswitch">
                                    <input type="checkbox" name="QuestionIsActive" class="onoffswitch-checkbox" id="QuestionIsActive" checked>
                                    <label class="onoffswitch-label" for="QuestionIsActive">
                                        <span class="onoffswitch-inner"></span>
                                        <span class="onoffswitch-switch"></span>
                                    </label>
                                </div>
                            </div>

                            @*<div class="form-group">
                                    <label class="form-check-label">Is Active</label>
                                    <label class="switch" style="margin-left:5%;">
                                        <input type="checkbox" id="QuestionIsActive" name="QuestionIsActive">
                                        <span class="slider round"></span>
                                    </label>
                                </div>*@


                        </div> <!--End of Column -->

                        <div class="col-md-6 pl-5 pr-5 ">


                            <div class="form-group ">
                                <label for="" class="control-label">Subject* </label>

                                <select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>
                            </div>

                            <div class="form-group  ">
                                <label for="" class="control-label">Topic* </label>

                                <select class="form-control TopIdDDL" id="TopId" name="TopId" required></select>
                            </div>

                            <div class="form-group">
                                <label for="" class="control-label">Lesson* </label>

                                <select class="form-control LessIdDDL" id="LessonId" name="LessonId" required></select>
                            </div>

                        </div> <!--column end -->

                    </div><!--row end-->

                    <!--<div class="row">
                        <div class="col-md-12 pl-5 pr-5 ">

                            @*@Html.LabelFor(model => model.QuestionIsActive, htmlAttributes: new { @class = "bmd-label-static pl-2" })*@

                            @*&nbsp;&nbsp;&nbsp;&nbsp;  <input type="checkbox" id="IsMandatory" name="IsMandatory" checked data-toggle="toggle">*@


                            <div class="form-check">

                                <label class="form-check-label hidden">
                                    Is Active
                                    @*@Html.EditorFor(model => model.QuestionIsActive, new { htmlAttributes = new { @class = "form-check-input" } })
                                    @Html.ValidationMessageFor(model => model.QuestionIsActive, "", new { @class = "text-danger" })*@

                                    <span class="form-check-sign"><span class="check"></span></span>
                                </label>
                            </div>

                        </div>


                        <div class="col-md-12 pl-5 pr-5 hidden">
                            <br />

                            <div class="form-check">

                                <label class="form-check-label">
                                    Is Quiz

                                    <span class="form-check-sign"><span class="check"></span></span>
                                </label>

                            </div>




                        </div>


                    </div> -->

                    <br>

                    <br>

                    <div class="row">
                        <div class="col-md-6 pl-5 pr-5 ">



                            <div class="form-group ">
                                <label for="" class="control-label">Question Type* </label>

                                <select class="form-control" id="QuestionType" name="QuestionType" required>

                                    <option value="MCQ" selected>MCQ</option>

                                </select>
                            </div>

                            <div class="form-group bmd-form-group my-3">


                                @Html.LabelFor(model => model.OptionNameOne, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.OptionNameOne, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.OptionNameOne, "", new { @class = "text-danger" })


                            </div>


                            <div class="form-group bmd-form-group my-3">

                                @Html.LabelFor(model => model.QuestionNameTwo, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.QuestionNameTwo, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.QuestionNameTwo, "", new { @class = "text-danger" })

                            </div>




                        </div> <!--end of Column 6-->



                        <div class="col-md-6 pl-5 pr-5 ">


                            <br />
                            <div class="form-group bmd-form-group my-3">

                                @Html.LabelFor(model => model.QuestionNameThree, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.QuestionNameThree, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.QuestionNameThree, "", new { @class = "text-danger" })

                            </div>




                            <div class="form-group bmd-form-group my-3">

                                @Html.LabelFor(model => model.QuesitonNameFour, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.QuesitonNameFour, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.QuesitonNameFour, "", new { @class = "text-danger" })

                            </div>




                            <div class="form-group ">

                                <label class="control-label">  Select Correct Answer</label>

                                <select class="form-control" id="Answer" name="Answer" required>

                                    <option value="">Select One</option>
                                    <option value="a">(a)</option>
                                    <option value="b">(b)</option>
                                    <option value="c">(c)</option>
                                    <option value="d">(d)</option>

                                </select>

                            </div>





                        </div><!--End of Column 6-->
                        @*<div class="col-md-8 pl-5 pr-5 pull-right">

                            <br />
                            <button type="submit" class="btn btn-primary rounded rounded-lg"> Save </button>


                            <button type="button" id="btnCancel" class="btn btn-primary rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                                <i class="material-icons mr-2">cached</i>  Cancel
                            </button>*@






                        @*</div>*@



                    </div>
                    <br>

                    <hr class="mt-5 mb-4">
                    <button type="submit" class="btn btn-primary pull-right rounded rounded-lg"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Save &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </button>
                    <button id="btnCancel" type="button" class="btn btn-primary pull-right rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                        <i class="material-icons mr-2">cached</i>  Cancel &nbsp; &nbsp;
                    </button>
                    <div class="clearfix"></div>
                }


            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {

        $("#btnCancel").click(function () {

            window.location.href = "/AspnetQuestions/ViewQuestionAndQuiz";
        })


        //    $("#QuestionType").change(function () {


        var QuestionType = "MCQ";

        if (QuestionType == "MCQ" || QuestionType == "TF") {

            $("#OptionsBlock").css('display', 'block');
            $("#FillAnswerBlock").css('display', 'none');

            $("#OptionsBlock input,select").prop('required', true);
            $("#FillAnswer").prop('required', false);
            $("#FillAnswer").val("");

        }
        else {

            $("#OptionsBlock input").val("");


            $("#OptionsBlock").css('display', 'none');
            $("#FillAnswerBlock").css('display', 'block');

            $("#OptionsBlock input,select").prop('required', false);
            $("#FillAnswer").prop('required', true);


        }



        //  })



    })

</script>
